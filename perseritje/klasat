Ush1
public class Person {
    private String emri;
    private String adresa;
    public Person(){
        this.emri="";
        this.adresa="";
    }
    public Person(String emri,String adresa){
        this.emri=emri;
        this.adresa=adresa;
    }
    public void setEmri(String emri){
        this.emri=emri;
    }
    public void setAdresa(String adresa){
        this.adresa=adresa;
    }
    public String getEmri(){
        return emri;
    }
    public String getAdresa(){
        return adresa;
    }
    public String toString(){
        return "Emri: "+this.emri+"\nAdresa: "+adresa+"\n";
    }
    //krahasimi i dy objekteve nqs jane i njejti person
    public boolean equals(Object obj){
        if(this==obj){
            return true;
        }
        if(obj==null||getClass()!=obj.getClass()){
            return false;
        }
        Person p=(Person) obj;
        return this.getEmri().equalsIgnoreCase(((Person) obj).getEmri())&& this.getAdresa().equalsIgnoreCase(((Person) obj).getAdresa());
    }
}
/*Nderto subklasen Mesues qe trashegon nga klasa person
* dhe shton variablat e instances qe mbajne numrin e kurseve,
* listen e emrave te kurseve qe jep ai mesues dhe je kod te mesuesit
* qe perfaqesohet nga nje numer qe inkrementohet per cdo instance.
* Klasa duhet te kete metodat shto kurs dhe hiqKurs dhe metoden toString */

import java.util.ArrayList;

public class Mesues extends Person{
    private static int i=0;
    private int nrKurse;
    private ArrayList<String> emratEKurseve;
    private int kodMesuesi;
    public Mesues(){
        this.nrKurse=0;
        this.emratEKurseve=new ArrayList<>();
        this.kodMesuesi=111111+ndryshoI();
    }
    public Mesues(String emri,String adresa,int nrKurse,ArrayList<String> emratEKurseve){
        super(emri,adresa);
        this.nrKurse=nrKurse;
        this.emratEKurseve=emratEKurseve;
        this.kodMesuesi=111111+ndryshoI();
    }

    public void shtoKurs(String kurs){
        if(emratEKurseve.contains(kurs)){
            System.out.println("Kursi eshte ekzistues te lista e kurseve.");
        }else{
            emratEKurseve.add(kurs);
        }

    }
    public void hiqKurs(String kurs){
        if(!emratEKurseve.contains(kurs)){
            System.out.println("Kursi nuk eksiston per ta hequr");
        }else{
            emratEKurseve.remove(kurs);
        }
    }


    public String toString(){
        return super.toString()+"\nNumri i kurseve: "+nrKurse+"\nEmrat e kurseve: "+emratEKurseve+"\nKodi: "+kodMesuesi;
    }



    public static int ndryshoI(){
        return ++i;
    }

}
public class Main {
    public static void main(String[] args){
        ArrayList<String> nrKurse=new ArrayList<>(Arrays.asList("Java","Sisteme multimediale","Bazat e informatikes"));
        Mesues m=new Mesues("Ersida Ceci","Rruga:Altin Mancellar",3,nrKurse);
       System.out.println(m.toString());
        ArrayList<String> nrKurse2=new ArrayList<>(Arrays.asList("Analiz","Statisik","Grafe"));
        Mesues m2=new Mesues("Ameila Neza","Rruga:Treni",3,nrKurse2);
        System.out.println(m2.toString());
        ArrayList<String> nrKurse3=new ArrayList<>(Arrays.asList("Struktur te dhenash ne C","Sisteme logjike","Anglisht"));
        Mesues m3=new Mesues("Dea","Rruga:Myslim shyri",3,nrKurse3);
        System.out.println(m3.toString());
    }
}

Ush2

/*Krijoni nje klase abstrakte e quajtur AbonuesRevistash e cila mban rekorde per adresen dhe normen e abonimit
* per abonuesin.Percaktoni metodat set dhe get per adresen dhe normen e abonimit
* Metoda set oer nirmen e abonimit eshte abstrakte.Ndertoni metoden equals() e cila kontrrollon nese dy Abonues jane te njete,
* pra nese ato kane te njejten adrese*/

public abstract class AbonuesRevistash{
    public String adresa;
    public double normaAbonimit;
    public void setAdresa(String adresa){
        this.adresa=adresa;
    }
    public abstract void setNormaAbonimit(double normaAbonimit);
    public String getAdresa(){
        return adresa;
    }
    public double getNormaAbonimit(){
        return normaAbonimit;
    }

   //kontrrollon nese dy Abonues jane te njete,
   //* pra nese ato kane te njejten adrese
    @Override
    public boolean equals(Object obj) {
       if(this==obj){
           return true;
       }
       if(obj==null||getClass()!=obj.getClass()){
           return false;
       }
       AbonuesRevistash a=(AbonuesRevistash) obj;

       return this.adresa.equalsIgnoreCase(a.adresa);
    }
}
/*Ndetoni klasen ShtateDiteAbonues e cila trashegon nga klasa AbonuesRevistash
 * Konstruktori vendos per abonuesin normen 5 euro.Klasa duhet te perfshije metoden toString e cila do te ktheje adrese,noren.
 * Te gjenerohet nje kod per secilin abonues te krijuar*/
public class ShtateDiteAbonues extends AbonuesRevistash{
    public static final double NORMA_ABONIMIT = 5.0;
    public static int i=0;
    private int kodiAbnuesit;
    public ShtateDiteAbonues(){
        adresa="";
        normaAbonimit=NORMA_ABONIMIT;
        kodiAbnuesit=111111+ndryshoI();
    }
    public ShtateDiteAbonues(String adresa) {
        this.adresa = adresa;
        this.normaAbonimit = NORMA_ABONIMIT;
        this.kodiAbnuesit = 111111 + ndryshoI();
    }

    @Override
    public void setNormaAbonimit(double NORMA_ABONIMIT) {
        this.normaAbonimit=NORMA_ABONIMIT;
    }
    public String toString() {
        return "Adresa: " + adresa + "\nNorma e abonimit: " + normaAbonimit + "\nKodi: " + kodiAbnuesit;
    }
    public static int ndryshoI(){
        return ++i;
    }
}
public class Main {
    public static void main(String[] args) {
        ShtateDiteAbonues abonues1 = new ShtateDiteAbonues("Rruga:Altin Mancellar");
        ShtateDiteAbonues abonues2 = new ShtateDiteAbonues("Rruga:Treni");

        System.out.println(abonues1.toString());
        System.out.println(abonues2.toString());
    }
}

